{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omistaja\\\\Desktop\\\\Oukukouluhommia\\\\Kev\\xE4t 22\\\\Web-projekti\\\\Hungeryapp\\\\frontend\\\\src\\\\components\\\\KayttajaMuokkaus.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Logopalkki from './Logopalkki';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport Constants2 from './Constants2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KayttajaMuokkaus() {\n  _s();\n\n  const [etunimi, setEtunimi] = useState(Constants2.ETUNIMI);\n  const [sukunimi, setSukunimi] = useState(Constants2.SUKUNIMI);\n  const [osoite, setOsoite] = useState(Constants2.OSOITE);\n  const [puhnro, setPuhnro] = useState(Constants2.PUHNRO);\n  const sahkoposti = useParams();\n  console.log(sahkoposti);\n  console.log(Constants2.SAHKOPOSTI); // tällä toimii \"http://localhost:8080/ravintolat/MahtiBurgerit@mahti.fi\"\n\n  const updateAPIData = async () => {\n    const result = await axios.put(`http://localhost:8080/customers/${Constants2.SAHKOPOSTI} `, {\n      nimi: etunimi,\n      osoite: osoite,\n      sukunimi: sukunimi,\n      puhnro: puhnro\n    }, []);\n    console.log(result);\n  };\n\n  const data = {\n    etunimi,\n    sukunimi,\n    osoite,\n    puhnro\n  };\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tausta\",\n    children: [/*#__PURE__*/_jsxDEV(Logopalkki, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ravintolaElementti2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"logo\",\n        children: \"T\\xE4\\xE4l\\xE4 muokataan asiakastietoja\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nappi\",\n          children: \" Etunimi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \" tekstikentta2\",\n          placeholder: \" Etunimi\",\n          onChange: e => setEtunimi(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nappi\",\n          children: \" Sukunimi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \" tekstikentta2\",\n          placeholder: \" Sukunimi\",\n          onChange: e => setSukunimi > e.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nappi\",\n          children: \" Osoite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \" tekstikentta2\",\n          placeholder: \" Osoite\",\n          onChange: e => setOsoite(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nappi\",\n          children: \" Puhelinnumero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \" tekstikentta2\",\n          placeholder: \" Puhelin numero\",\n          onChange: e => setPuhnro(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nappi\",\n      type: \"submit\",\n      onClick: updateAPIData,\n      children: \"P\\xE4ivit\\xE4 tiedot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n/**    const sahkoposti = useParams();\r\n\r\n    const [ravintolat, setRavintolat] = useState([]);\r\n  \r\n  useEffect(() =>{\r\n    const getRavintolat = async () => {\r\n      const raflat = await axios.get('http://localhost:8080/ravintolat/{sahkoposti}')\r\n\r\n      setRavintolat(raflat.data);\r\n      console.log(raflat.data);\r\n\r\n    }\r\n\r\n      getRavintolat();\r\n\r\n   }, []); */\n\n/* const setData = (data) => {\r\n  let { nimi, osoite, tyyppi, aukioloajat, hintataso } = data;\r\n  setNimi(nimi);\r\n  setOsoite(osoite);\r\n  setTyyppi(tyyppi);\r\n  setAukioloajat(aukioloajat);\r\n  setHintataso(hintataso)      \r\n}*/\n//Tällä saisi ravintolan tiedot ja tiedot asetettaisiin muuttujii, niin ne ei häipyisi jos tekstikenttä on tyhjä\n//'http://localhost:8080/ravintolat/MahtiBurgerit@mahti.fi'\n\n/* useEffect(() =>{\r\n   const getRavintolat = async () => {\r\n     const raflat = await axios.get('http://localhost:8080/ravintolat/')\r\n     setRavintolat(raflat.data);\r\n     console.log(raflat.data);\r\n   }\r\n   \r\n     getRavintolat();\r\n     \r\n  }, []);*/\n\n/* tää on oikeesti toimiva\r\nconst [nimi, setNimi] = useState(ravintolat.nimi);\r\nconst [osoite, setOsoite] = useState(ravintolat.osoite);\r\nconst [tyyppi, setTyyppi] = useState(ravintolat.tyyppi);\r\nconst [aukioloajat, setAukioloajat] = useState(ravintolat.aukioloajat);\r\nconst [hintataso, setHintataso] = useState(ravintolat.hintataso);\r\n*/\n//Kun ravintola tai käyttäjä kirjautuu sisään, niin se antaa propseina eteenpäin omat tiedot\n// jotka voi osoittaa yllä oleviin muuttujiin.\n\n_s(KayttajaMuokkaus, \"B+KgmSdQXJOUOz7p7h6d7sgApq0=\", false, function () {\n  return [useParams];\n});\n\n_c = KayttajaMuokkaus;\n\nvar _c;\n\n$RefreshReg$(_c, \"KayttajaMuokkaus\");","map":{"version":3,"sources":["C:/Users/Omistaja/Desktop/Oukukouluhommia/Kevät 22/Web-projekti/Hungeryapp/frontend/src/components/KayttajaMuokkaus.js"],"names":["React","Logopalkki","useState","useEffect","axios","useParams","Constants2","KayttajaMuokkaus","etunimi","setEtunimi","ETUNIMI","sukunimi","setSukunimi","SUKUNIMI","osoite","setOsoite","OSOITE","puhnro","setPuhnro","PUHNRO","sahkoposti","console","log","SAHKOPOSTI","updateAPIData","result","put","nimi","data","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Logopalkki from './Logopalkki'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport Constants2 from './Constants2'\r\n\r\n\r\n\r\nexport default function KayttajaMuokkaus() {\r\n\r\n    const [etunimi, setEtunimi] = useState(Constants2.ETUNIMI);\r\n    const [sukunimi, setSukunimi] = useState(Constants2.SUKUNIMI);\r\n    const [osoite, setOsoite] = useState(Constants2.OSOITE);\r\n    const [puhnro, setPuhnro] = useState(Constants2.PUHNRO);\r\n \r\n    const sahkoposti = useParams();\r\n    console.log(sahkoposti);\r\n    console.log(Constants2.SAHKOPOSTI)\r\n   // tällä toimii \"http://localhost:8080/ravintolat/MahtiBurgerit@mahti.fi\"\r\n    const updateAPIData = async () => {\r\n        const result = await axios.put(`http://localhost:8080/customers/${Constants2.SAHKOPOSTI} `, { \r\n            nimi: etunimi,\r\n            osoite: osoite,\r\n            sukunimi: sukunimi,\r\n            puhnro: puhnro\r\n        }, [] ); \r\n        console.log(result);\r\n    }\r\n    const data = {etunimi, sukunimi, osoite, puhnro};\r\n    console.log(data);\r\n\r\n\r\n\r\n  return (\r\n      <div className = \"tausta\">\r\n          <Logopalkki/>\r\n    <div className = \"ravintolaElementti2\">\r\n    <h3 className=\"logo\">Täälä muokataan asiakastietoja</h3>\r\n   \r\n    <form >\r\n            <label className = \"nappi\"> Etunimi</label>\r\n            <input className = \" tekstikentta2\" placeholder=\" Etunimi\" onChange={(e) => setEtunimi(e.target.value)}/>\r\n    </form> \r\n    <form >\r\n            <label className = \"nappi\"> Sukunimi</label>\r\n            <input className = \" tekstikentta2\" placeholder=\" Sukunimi\" onChange={(e) => setSukunimi>(e.target.value)}/>\r\n    </form>\r\n    <form >\r\n            <label className = \"nappi\"> Osoite</label>\r\n            <input className = \" tekstikentta2\" placeholder=\" Osoite\" onChange={(e) => setOsoite(e.target.value)} />\r\n    </form> \r\n    <form >\r\n            <label className = \"nappi\"> Puhelinnumero</label>\r\n            <input className = \" tekstikentta2\" placeholder=\" Puhelin numero\" onChange={(e) => setPuhnro(e.target.value)}/>\r\n    </form> \r\n    </div>\r\n    <button className=\"nappi\"type = \"submit\" onClick={updateAPIData}>Päivitä tiedot</button>\r\n    \r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n/**    const sahkoposti = useParams();\r\n\r\n    const [ravintolat, setRavintolat] = useState([]);\r\n  \r\n  useEffect(() =>{\r\n    const getRavintolat = async () => {\r\n      const raflat = await axios.get('http://localhost:8080/ravintolat/{sahkoposti}')\r\n\r\n      setRavintolat(raflat.data);\r\n      console.log(raflat.data);\r\n\r\n    }\r\n\r\n      getRavintolat();\r\n\r\n   }, []); */\r\n\r\n      /* const setData = (data) => {\r\n        let { nimi, osoite, tyyppi, aukioloajat, hintataso } = data;\r\n        setNimi(nimi);\r\n        setOsoite(osoite);\r\n        setTyyppi(tyyppi);\r\n        setAukioloajat(aukioloajat);\r\n        setHintataso(hintataso)      \r\n}*/\r\n\r\n    //Tällä saisi ravintolan tiedot ja tiedot asetettaisiin muuttujii, niin ne ei häipyisi jos tekstikenttä on tyhjä\r\n    //'http://localhost:8080/ravintolat/MahtiBurgerit@mahti.fi'\r\n /* useEffect(() =>{\r\n    const getRavintolat = async () => {\r\n      const raflat = await axios.get('http://localhost:8080/ravintolat/')\r\n      setRavintolat(raflat.data);\r\n      console.log(raflat.data);\r\n    }\r\n    \r\n      getRavintolat();\r\n      \r\n   }, []);*/\r\n\r\n     /* tää on oikeesti toimiva\r\n    const [nimi, setNimi] = useState(ravintolat.nimi);\r\n    const [osoite, setOsoite] = useState(ravintolat.osoite);\r\n    const [tyyppi, setTyyppi] = useState(ravintolat.tyyppi);\r\n    const [aukioloajat, setAukioloajat] = useState(ravintolat.aukioloajat);\r\n    const [hintataso, setHintataso] = useState(ravintolat.hintataso);\r\n*/\r\n\r\n//Kun ravintola tai käyttäjä kirjautuu sisään, niin se antaa propseina eteenpäin omat tiedot\r\n// jotka voi osoittaa yllä oleviin muuttujiin."]},"metadata":{},"sourceType":"module"}