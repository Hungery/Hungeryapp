{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omistaja\\\\Desktop\\\\Oukukouluhommia\\\\Kev\\xE4t 22\\\\Web-projekti\\\\Hungeryapp\\\\frontend\\\\src\\\\components\\\\RavintolaLista.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport Buttons from './Buttons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RavintolaLista(props) {\n  _s();\n\n  const [ravintolat, setRavintolat] = useState(props.ravintolat);\n  const [showAll, setShowAll] = useState(true);\n  const [newNote2, setNewNote2] = useState('');\n\n  const handleNoteChange2 = event => {\n    console.log(event.target.value);\n    setNewNote2(event.target.value);\n  }; //  console.log(ravintolat)\n\n\n  const ravintolatToShow = showAll ? ravintolat : ravintolat.filter(note => note.nimi.toLowerCase().includes(newNote2) || note.nimi.toUpperCase().includes(newNote2)); //Tässä pieni funktio, jolla hoidetaan nappien fillteröinti ominaisuus\n  //Tämä lähtetetään propseina Buttons komponentille\n\n  const filterItem = curcat => {\n    const newItem = ravintolat.filter(newVal => {\n      return newVal.tyyppi === curcat; // comparing category for displaying data\n    });\n    setRavintolat(newItem);\n  };\n\n  console.log(ravintolat); //Tässä ravintolalistasta otetaan talteen muuttujaan ravintoloiden tyypit\n\n  const ravintolaTyypit = [...new Set(ravintolat.map(Val => Val.tyyppi))];\n  console.log(ravintolat);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtteriPalkki\",\n      children: [/*#__PURE__*/_jsxDEV(Buttons, {\n        setRavintolat: setRavintolat,\n        filterItem: filterItem,\n        ravintolaTyypit: ravintolaTyypit,\n        ravintolat: ravintolat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        className: \"nappi\",\n        children: showAll ? 'Hae ravintolaa' : 'Hae ravintolaa'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNote2,\n          className: \"tekstikentta\",\n          onChange: handleNoteChange2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ravintolaElementti\",\n      children: ravintolatToShow.map(ravintolat => /*#__PURE__*/_jsxDEV(Link, {\n        to: ravintolat.nimi,\n        className: \"ravintolaListaElementti\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: ravintolat.nimi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [ravintolat.tyyppi, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 23\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, ravintolat.nimi, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n/* alkuperäinen napi järjestys\r\n<div className=\"filtteriPalkkiElementti\">\r\n         <button className=\"nappi\">Asian</button> \r\n         <button className=\"nappi\">Mexican</button>\r\n         <button className=\"nappi\">American</button>  \r\n         </div>  */\n\n_s(RavintolaLista, \"yxvu4ev4sJJO30WbndJOMsSM2F4=\");\n\n_c = RavintolaLista;\n\nvar _c;\n\n$RefreshReg$(_c, \"RavintolaLista\");","map":{"version":3,"sources":["C:/Users/Omistaja/Desktop/Oukukouluhommia/Kevät 22/Web-projekti/Hungeryapp/frontend/src/components/RavintolaLista.js"],"names":["React","Link","useState","Buttons","RavintolaLista","props","ravintolat","setRavintolat","showAll","setShowAll","newNote2","setNewNote2","handleNoteChange2","event","console","log","target","value","ravintolatToShow","filter","note","nimi","toLowerCase","includes","toUpperCase","filterItem","curcat","newItem","newVal","tyyppi","ravintolaTyypit","Set","map","Val"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAACG,KAAK,CAACC,UAAP,CAA5C;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,iBAAiB,GAAIC,KAAD,IAAW;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAN,IAAAA,WAAW,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAX;AACD,GAHH,CAL0C,CAU1C;;;AACA,QAAMC,gBAAgB,GAAGV,OAAO,GAC9BF,UAD8B,GAE9BA,UAAU,CAACa,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCb,QAAjC,KAA8CU,IAAI,CAACC,IAAL,CAAUG,WAAV,GAAwBD,QAAxB,CAAiCb,QAAjC,CAAxE,CAFF,CAX0C,CAe1C;AACA;;AACA,QAAMe,UAAU,GAAIC,MAAD,IAAY;AAC7B,UAAMC,OAAO,GAAGrB,UAAU,CAACa,MAAX,CAAmBS,MAAD,IAAY;AAC5C,aAAOA,MAAM,CAACC,MAAP,KAAkBH,MAAzB,CAD4C,CAExC;AACL,KAHe,CAAhB;AAIAnB,IAAAA,aAAa,CAACoB,OAAD,CAAb;AACD,GAND;;AAOAb,EAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ,EAxB0C,CA0B1C;;AACA,QAAMwB,eAAe,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQzB,UAAU,CAAC0B,GAAX,CAAgBC,GAAD,IAASA,GAAG,CAACJ,MAA5B,CAAR,CAAJ,CAAxB;AACAf,EAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AAEF,sBACE;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACA,QAAC,OAAD;AAAS,QAAA,aAAa,EAAGC,aAAzB;AAAwC,QAAA,UAAU,EAAIkB,UAAtD;AAAkE,QAAA,eAAe,EAAIK,eAArF;AAAsG,QAAA,UAAU,EAAIxB;AAApH;AAAA;AAAA;AAAA;AAAA,cADA,eAEC;AAAQ,QAAA,OAAO,EAAE,MAAMG,UAAU,CAAC,CAACD,OAAF,CAAjC;AAA6C,QAAA,SAAS,EAAC,OAAvD;AAAA,kBACEA,OAAO,GAAG,gBAAH,GAAsB;AAD/B;AAAA;AAAA;AAAA;AAAA,cAFD,eAKC;AAAA,+BACG;AAAO,UAAA,KAAK,EAAIE,QAAhB;AAA0B,UAAA,SAAS,EAAC,cAApC;AACA,UAAA,QAAQ,EAAIE;AADZ;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACEM,gBAAgB,CAACc,GAAjB,CAAqB1B,UAAU,iBAC7B,QAAC,IAAD;AAAM,QAAA,EAAE,EAAGA,UAAU,CAACe,IAAtB;AAAoD,QAAA,SAAS,EAAC,yBAA9D;AAAA,gCACI;AAAA,iCAAK;AAAA,sBAAKf,UAAU,CAACe;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,uCAAM;AAAA,uBAAKf,UAAU,CAACuB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAmCvB,UAAU,CAACe,IAA9C;AAAA;AAAA;AAAA;AAAA,cADF;AADF;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;AAGD;AACA;AACA;AACA;AACA;AACA;;GA/DwBjB,c;;KAAAA,c","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport Buttons from './Buttons'\r\n\r\n\r\nexport default function RavintolaLista(props) {\r\n    const [ravintolat, setRavintolat] = useState(props.ravintolat)\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [newNote2, setNewNote2] = useState('' )\r\n\r\n    const handleNoteChange2 = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNote2(event.target.value)\r\n      }\r\n\r\n    //  console.log(ravintolat)\r\n    const ravintolatToShow = showAll\r\n    ? ravintolat\r\n    : ravintolat.filter(note => note.nimi.toLowerCase().includes(newNote2) || note.nimi.toUpperCase().includes(newNote2))\r\n\r\n    //Tässä pieni funktio, jolla hoidetaan nappien fillteröinti ominaisuus\r\n    //Tämä lähtetetään propseina Buttons komponentille\r\n    const filterItem = (curcat) => {\r\n      const newItem = ravintolat.filter((newVal) => {\r\n        return newVal.tyyppi === curcat; \r\n            // comparing category for displaying data\r\n      });\r\n      setRavintolat(newItem);\r\n    };\r\n    console.log(ravintolat)\r\n\r\n    //Tässä ravintolalistasta otetaan talteen muuttujaan ravintoloiden tyypit\r\n    const ravintolaTyypit = [...new Set(ravintolat.map((Val) => Val.tyyppi))];\r\n    console.log(ravintolat)\r\n\r\n  return (\r\n    <div>\r\n\r\n        <div className=\"filtteriPalkki\">\r\n        <Buttons setRavintolat ={setRavintolat} filterItem = {filterItem} ravintolaTyypit = {ravintolaTyypit} ravintolat = {ravintolat}/>\r\n         <button onClick={() => setShowAll(!showAll)} className=\"nappi\">\r\n          {showAll ? 'Hae ravintolaa' : 'Hae ravintolaa' }\r\n         </button>\r\n         <form >\r\n            <input value = {newNote2} className=\"tekstikentta\"\r\n            onChange = {handleNoteChange2}/>\r\n         </form> \r\n          \r\n        </div>\r\n        \r\n        <div className=\"ravintolaElementti\">\r\n        { ravintolatToShow.map(ravintolat =>\r\n            <Link to={ ravintolat.nimi} key = {ravintolat.nimi} className=\"ravintolaListaElementti\" >\r\n                <div><h1>{ravintolat.nimi}</h1></div>\r\n                <div> <h2>{ravintolat.tyyppi} </h2> </div> \r\n            </Link>\r\n            )} \r\n        </div> \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n/* alkuperäinen napi järjestys\r\n<div className=\"filtteriPalkkiElementti\">\r\n         <button className=\"nappi\">Asian</button> \r\n         <button className=\"nappi\">Mexican</button>\r\n         <button className=\"nappi\">American</button>  \r\n         </div>  */"]},"metadata":{},"sourceType":"module"}