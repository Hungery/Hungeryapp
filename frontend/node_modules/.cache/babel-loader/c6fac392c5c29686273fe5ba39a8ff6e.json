{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omistaja\\\\Desktop\\\\Oukukouluhommia\\\\Kev\\xE4t 22\\\\Web-projekti\\\\Hungeryapp\\\\frontend\\\\src\\\\components\\\\KayttajaMuokkaus.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Logopalkki from './Logopalkki';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport Constants2 from './Constants2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KayttajaMuokkaus() {\n  _s();\n\n  const [kayttaja, setKayttaja] = useState([]);\n  useEffect(() => {\n    const getCustomer = async () => {\n      const kayttajat = await axios.get(`http://localhost:8080/customers/${Constants2.SAHKOPOSTI}`);\n      setKayttaja(kayttajat.data);\n      setEtunimi(kayttajat.data.etunimi);\n      setSukunimi(kayttajat.data.sukunimi);\n      setOsoite(kayttajat.data.osoite);\n      setPuhnro(kayttajat.data.puhnro);\n      console.log(kayttajat.data);\n    };\n\n    getCustomer();\n  }, []);\n  const [etunimi1, setEtunimi] = useState(kayttaja.etunimi);\n  const [sukunimi1, setSukunimi] = useState(kayttaja.sukunimi);\n  const [osoite1, setOsoite] = useState(kayttaja.osoite);\n  const [puhnro1, setPuhnro] = useState(kayttaja.puhnro);\n  console.log(Constants2.SAHKOPOSTI);\n  console.log(kayttaja.etunimi); // tällä toimii \"http://localhost:8080/ravintolat/mkyllonen@gmail.com\"\n  // pitäs olla tämätt `http://localhost:8080/customers/${Constants2.SAHKOPOSTI} `\n\n  const updateAPIData = async () => {\n    const result = await axios.put(`http://localhost:8080/customers/${Constants2.SAHKOPOSTI} `, {\n      etunimi: etunimi1,\n      sukunimi: sukunimi1,\n      osoite: osoite1,\n      puhnro: puhnro1\n    }, []);\n    console.log(result);\n  };\n\n  console.log(kayttaja);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tausta\",\n    children: [/*#__PURE__*/_jsxDEV(Logopalkki, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ravintolaElementti2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"logo\",\n        children: \"T\\xE4\\xE4l\\xE4 muokataan asiakastietoja\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nappi\",\n          children: \" Etunimi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \" tekstikentta2\",\n          placeholder: \" Etunimi\",\n          onChange: e => setEtunimi(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nappi\",\n          children: \" Sukunimi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \" tekstikentta2\",\n          placeholder: \" Sukunimi\",\n          onChange: e => setSukunimi > e.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nappi\",\n          children: \" Osoite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \" tekstikentta2\",\n          placeholder: \" Osoite\",\n          onChange: e => setOsoite(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nappi\",\n          children: \" Puhelinnumero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \" tekstikentta2\",\n          placeholder: \" Puhelin numero\",\n          onChange: e => setPuhnro(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nappi\",\n      type: \"submit\",\n      onClick: updateAPIData,\n      children: \"P\\xE4ivit\\xE4 tiedot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n/**    const sahkoposti = useParams();\r\n\r\n    const [ravintolat, setRavintolat] = useState([]);\r\n  \r\n  useEffect(() =>{\r\n    const getRavintolat = async () => {\r\n      const raflat = await axios.get('http://localhost:8080/ravintolat/{sahkoposti}')\r\n\r\n      setRavintolat(raflat.data);\r\n      console.log(raflat.data);\r\n\r\n    }\r\n\r\n      getRavintolat();\r\n\r\n   }, []); */\n\n/* const setData = (data) => {\r\n  let { nimi, osoite, tyyppi, aukioloajat, hintataso } = data;\r\n  setNimi(nimi);\r\n  setOsoite(osoite);\r\n  setTyyppi(tyyppi);\r\n  setAukioloajat(aukioloajat);\r\n  setHintataso(hintataso)      \r\n}*/\n//Tällä saisi ravintolan tiedot ja tiedot asetettaisiin muuttujii, niin ne ei häipyisi jos tekstikenttä on tyhjä\n//'http://localhost:8080/ravintolat/MahtiBurgerit@mahti.fi'\n\n/* useEffect(() =>{\r\n   const getRavintolat = async () => {\r\n     const raflat = await axios.get('http://localhost:8080/ravintolat/')\r\n     setRavintolat(raflat.data);\r\n     console.log(raflat.data);\r\n   }\r\n   \r\n     getRavintolat();\r\n     \r\n  }, []);*/\n\n/* tää on oikeesti toimiva\r\nconst [nimi, setNimi] = useState(ravintolat.nimi);\r\nconst [osoite, setOsoite] = useState(ravintolat.osoite);\r\nconst [tyyppi, setTyyppi] = useState(ravintolat.tyyppi);\r\nconst [aukioloajat, setAukioloajat] = useState(ravintolat.aukioloajat);\r\nconst [hintataso, setHintataso] = useState(ravintolat.hintataso);\r\n*/\n//Kun ravintola tai käyttäjä kirjautuu sisään, niin se antaa propseina eteenpäin omat tiedot\n// jotka voi osoittaa yllä oleviin muuttujiin.\n\n_s(KayttajaMuokkaus, \"1P7UIPP5PVXRBDh9m+/Y3dc7yTQ=\");\n\n_c = KayttajaMuokkaus;\n\nvar _c;\n\n$RefreshReg$(_c, \"KayttajaMuokkaus\");","map":{"version":3,"sources":["C:/Users/Omistaja/Desktop/Oukukouluhommia/Kevät 22/Web-projekti/Hungeryapp/frontend/src/components/KayttajaMuokkaus.js"],"names":["React","Logopalkki","useState","useEffect","axios","useParams","Constants2","KayttajaMuokkaus","kayttaja","setKayttaja","getCustomer","kayttajat","get","SAHKOPOSTI","data","setEtunimi","etunimi","setSukunimi","sukunimi","setOsoite","osoite","setPuhnro","puhnro","console","log","etunimi1","sukunimi1","osoite1","puhnro1","updateAPIData","result","put","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Logopalkki from './Logopalkki'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport Constants2 from './Constants2'\r\n\r\n\r\n\r\nexport default function KayttajaMuokkaus() {\r\n\r\n  const [kayttaja, setKayttaja] = useState([]);\r\n\r\n\r\n  useEffect(() =>{\r\n    const getCustomer = async () => {\r\n      const kayttajat = await axios.get(`http://localhost:8080/customers/${Constants2.SAHKOPOSTI}`)\r\n      setKayttaja(kayttajat.data);\r\n      setEtunimi(kayttajat.data.etunimi);\r\n      setSukunimi(kayttajat.data.sukunimi);\r\n      setOsoite(kayttajat.data.osoite);\r\n      setPuhnro(kayttajat.data.puhnro);\r\n      console.log(kayttajat.data);\r\n    }\r\n    \r\n      getCustomer();\r\n      \r\n   }, []);\r\n\r\n    const [etunimi1, setEtunimi] = useState(kayttaja.etunimi);\r\n    const [sukunimi1, setSukunimi] = useState(kayttaja.sukunimi);\r\n    const [osoite1, setOsoite] = useState(kayttaja.osoite);\r\n    const [puhnro1, setPuhnro] = useState(kayttaja.puhnro);\r\n \r\n    console.log(Constants2.SAHKOPOSTI)\r\n    console.log(kayttaja.etunimi)\r\n   // tällä toimii \"http://localhost:8080/ravintolat/mkyllonen@gmail.com\"\r\n   // pitäs olla tämätt `http://localhost:8080/customers/${Constants2.SAHKOPOSTI} `\r\n    const updateAPIData = async () => {\r\n        const result = await axios.put(`http://localhost:8080/customers/${Constants2.SAHKOPOSTI} `, { \r\n            etunimi: etunimi1,\r\n            sukunimi: sukunimi1,\r\n            osoite: osoite1,\r\n            puhnro: puhnro1\r\n        }, [] ); \r\n        console.log(result);\r\n    }\r\n  \r\n    console.log(kayttaja);\r\n\r\n\r\n\r\n  return (\r\n      <div className = \"tausta\">\r\n          <Logopalkki/>\r\n    <div className = \"ravintolaElementti2\">\r\n    <h3 className=\"logo\">Täälä muokataan asiakastietoja</h3>\r\n   \r\n    <form >\r\n            <label className = \"nappi\"> Etunimi</label>\r\n            <input className = \" tekstikentta2\" placeholder=\" Etunimi\" onChange={(e) => setEtunimi(e.target.value)}/>\r\n    </form> \r\n    <form >\r\n            <label className = \"nappi\"> Sukunimi</label>\r\n            <input className = \" tekstikentta2\" placeholder=\" Sukunimi\" onChange={(e) => setSukunimi>(e.target.value)}/>\r\n    </form>\r\n    <form >\r\n            <label className = \"nappi\"> Osoite</label>\r\n            <input className = \" tekstikentta2\" placeholder=\" Osoite\" onChange={(e) => setOsoite(e.target.value)} />\r\n    </form> \r\n    <form >\r\n            <label className = \"nappi\"> Puhelinnumero</label>\r\n            <input className = \" tekstikentta2\" placeholder=\" Puhelin numero\" onChange={(e) => setPuhnro(e.target.value)}/>\r\n    </form> \r\n    </div>\r\n    <button className=\"nappi\"type = \"submit\" onClick={updateAPIData}>Päivitä tiedot</button>\r\n    \r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n/**    const sahkoposti = useParams();\r\n\r\n    const [ravintolat, setRavintolat] = useState([]);\r\n  \r\n  useEffect(() =>{\r\n    const getRavintolat = async () => {\r\n      const raflat = await axios.get('http://localhost:8080/ravintolat/{sahkoposti}')\r\n\r\n      setRavintolat(raflat.data);\r\n      console.log(raflat.data);\r\n\r\n    }\r\n\r\n      getRavintolat();\r\n\r\n   }, []); */\r\n\r\n      /* const setData = (data) => {\r\n        let { nimi, osoite, tyyppi, aukioloajat, hintataso } = data;\r\n        setNimi(nimi);\r\n        setOsoite(osoite);\r\n        setTyyppi(tyyppi);\r\n        setAukioloajat(aukioloajat);\r\n        setHintataso(hintataso)      \r\n}*/\r\n\r\n    //Tällä saisi ravintolan tiedot ja tiedot asetettaisiin muuttujii, niin ne ei häipyisi jos tekstikenttä on tyhjä\r\n    //'http://localhost:8080/ravintolat/MahtiBurgerit@mahti.fi'\r\n /* useEffect(() =>{\r\n    const getRavintolat = async () => {\r\n      const raflat = await axios.get('http://localhost:8080/ravintolat/')\r\n      setRavintolat(raflat.data);\r\n      console.log(raflat.data);\r\n    }\r\n    \r\n      getRavintolat();\r\n      \r\n   }, []);*/\r\n\r\n     /* tää on oikeesti toimiva\r\n    const [nimi, setNimi] = useState(ravintolat.nimi);\r\n    const [osoite, setOsoite] = useState(ravintolat.osoite);\r\n    const [tyyppi, setTyyppi] = useState(ravintolat.tyyppi);\r\n    const [aukioloajat, setAukioloajat] = useState(ravintolat.aukioloajat);\r\n    const [hintataso, setHintataso] = useState(ravintolat.hintataso);\r\n*/\r\n\r\n//Kun ravintola tai käyttäjä kirjautuu sisään, niin se antaa propseina eteenpäin omat tiedot\r\n// jotka voi osoittaa yllä oleviin muuttujiin."]},"metadata":{},"sourceType":"module"}